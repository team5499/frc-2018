plugins {
    id 'java'
    id 'jaci.openrio.gradle.GradleRIO' version '2018.03.06'
}

repositories {
    mavenLocal()
    mavenCentral()
}

def TEAM = 5499
def ROBOT_CLASS = "org.team5499.robots.frc2018.Robot"

// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.
deploy {
    targets {
        target("roborio", jaci.openrio.gradle.frc.RoboRIO) {
            team = TEAM
        }
    }
    artifacts {
        artifact('frcJava', jaci.openrio.gradle.frc.FRCJavaArtifact) {
            targets << "roborio"
        }
    }
}

wpi {
    wpilibVersion = '2018.4.1'
    ctreVersion = '5.3.1.0'
}

// Defining my dependencies. In this case, WPILib (+ friends), CTRE Toolsuite (Talon SRX)
// and NavX.
dependencies {
    compile wpilib()
    compile ctre()
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    compile group: 'org.apache.tomcat', name: 'tomcat-websocket', version: '9.0.4'
    compile group: 'org.glassfish.tyrus', name: 'tyrus-server', version: '1.13.1'
    compile group: 'org.glassfish.tyrus', name: 'tyrus-container-grizzly-server', version: '1.13.1'
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.5.1'
}

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest jaci.openrio.gradle.GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.compilerArgs += '-parameters'
}